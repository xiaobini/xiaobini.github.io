<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hello</title>
      <link href="/2023/08/27/hello/"/>
      <url>/2023/08/27/hello/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/08/27/hello-world/"/>
      <url>/2023/08/27/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 嵌入式、C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用HEXO以及Github搭建博客</title>
      <link href="/2023/08/27/%E4%BD%BF%E7%94%A8HEXO%E4%BB%A5%E5%8F%8AGithub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2023/08/27/%E4%BD%BF%E7%94%A8HEXO%E4%BB%A5%E5%8F%8AGithub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="工欲善其事"><a href="#工欲善其事" class="headerlink" title="工欲善其事"></a>工欲善其事</h1><h2 id="Git下载及配置"><a href="#Git下载及配置" class="headerlink" title="Git下载及配置"></a>Git下载及配置</h2><p>电脑中需要安装git，没有git中可以在<a href="https://git-scm.com/downloads">官网</a>中下载。安装的时候一路next即可，也可以选择自己要安装的目录。</p><p>安装好git后，打开Git Bash(如图)</p><p><img src="https://raw.githubusercontent.com/xiaobini/image/main/image%5C202308271539904.png" alt="Git Bash"></p><p>然后使用以下git命令绑定账号</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;github中的用户名&quot;</span><br><span class="line">git config --global user.emil &quot;github绑定的邮箱&quot;</span><br></pre></td></tr></table></figure><h2 id="Nose-JS下载"><a href="#Nose-JS下载" class="headerlink" title="Nose.JS下载"></a>Nose.JS下载</h2><p>hexo是基于Nose.js框架下驱动的，所以使用hexo创建网站的时候需要下载（Nose.js)[<a href="https://nodejs.org/en/download]%E6%A1%86%E6%9E%B6%E3%80%82">https://nodejs.org/en/download]框架。</a></p><p>以上步骤完成之后，可以使用<em>git -version</em>或者<em>npm -v</em>进行测试。</p><p><img src="https://raw.githubusercontent.com/xiaobini/image/main/image%5C202308271553490.png" alt="测试下载"></p><h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><p>在git中输入<em><strong>npm install -g hexo-cli</strong></em>下载hexo</p><h2 id="在github中创建静态网站的仓库"><a href="#在github中创建静态网站的仓库" class="headerlink" title="在github中创建静态网站的仓库"></a>在github中创建静态网站的仓库</h2><p>每一个账号都只能有一个repo个人主页，并且这个网站要放在maser分支上。在github中创建一个仓库，这个仓库的名字有严格的要求，格式为：&#x3D;&#x3D;用户名&#x2F;用户名.gothub.io&#x3D;&#x3D;，例如：xiaobini&#x2F;xiaobini.github.io，这里的用户名是Github的用户名，必须是Github用户名。</p><p><img src="https://raw.githubusercontent.com/xiaobini/image/main/image%5C202308271607646.png" alt="仓库创建"></p><h1 id="利剑出鞘"><a href="#利剑出鞘" class="headerlink" title="利剑出鞘"></a>利剑出鞘</h1><h2 id="使用HEXO生成原始网站"><a href="#使用HEXO生成原始网站" class="headerlink" title="使用HEXO生成原始网站"></a>使用HEXO生成原始网站</h2><p>在任意位置右键打开Git Bash或者是使用cd指令进入，总之命令行要指向该窗口，我将博客的文件存放到D:\myblog中。</p><p><img src="https://raw.githubusercontent.com/xiaobini/image/main/image%5C202308271625942.png"></p><p>然后在git中分别执行下面指令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git init blog  #这里的blog可以是你自己喜欢的名字</span><br><span class="line">cd blog</span><br><span class="line">nmp install</span><br></pre></td></tr></table></figure><p>如果上面指令都没有出错的话，可以输入 hexo s启动服务，然后在<a href="http://localhost:4000/">http://localhost:4000</a> 中可以看到该网站的最初形态。</p><h2 id="加载主题"><a href="#加载主题" class="headerlink" title="加载主题"></a>加载主题</h2><p>关于hexo中的各个主题可以在<a href="https://hexo.io/themes/index.html">hexo主题</a>中获得，下面就以<a href="https://github.com/blinkfox/hexo-theme-matery">matery</a>为例。</p><p>绝大多数主题作者都会告诉安装以及配置方式。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/blinkfox/hexo-theme-matery.git # 使用该指令下载主题</span><br></pre></td></tr></table></figure><p>打开博客根目录（D:\Myblog\blog），找到_config.yml，打开后拉到最后找到theme。将landscpe替换成主题名字。</p><p><img src="https://raw.githubusercontent.com/xiaobini/image/main/image%5C202308271759461.png" alt="主题配置1"></p><p>下载后将主题放置到hexo生成文件中的themes文件夹（D:\Myblog\blog\themes）中。这个时候在git中输入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g # 更新生成</span><br><span class="line">hexo s # 开启服务</span><br></pre></td></tr></table></figure><p>这个时候再打开<a href="http://localhost:4000/">http://localhost:4000</a> 就能看到主题。</p><h2 id="配置主题"><a href="#配置主题" class="headerlink" title="配置主题"></a>配置主题</h2><p>打开主题文件夹（D:\Myblog\blog\themes\hexo-theme-matery）找到_config.yml进行主题配置。</p><p>根据作者的描述，如果需要在网页中加上分类或者是标签的话需要在git中使用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo new page &quot;categories&quot;</span><br><span class="line">hexo new page &quot;tag&quot;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/xiaobini/image/main/image%5C202308271654345.png" alt="配置主题1"></p><p>输入后在博客目录的sorce文件夹下会分别生成tag、categories文件夹。这两个文件夹里面包含了index.md，打开后将头部修改为</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">tag文件夹中的index.md加入</span></span><br><span class="line">title: tags</span><br><span class="line">date: 2018-09-30 18:23:38</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">layout: &quot;tags&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">categories文件夹中的index.md加入</span></span><br><span class="line">title: categories</span><br><span class="line">date: 2018-09-30 17:25:30</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">layout: &quot;categories&quot;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/xiaobini/image/main/image%5C202308271658498.png" alt="tag配置"></p><p><img src="https://raw.githubusercontent.com/xiaobini/image/main/image%5C202308271700473.png" alt="categories配置"></p><p>以后在写文章的时候在文章的头部分别加入tag、categories就可以在网页中点击该栏目的时候看到这个文章。</p><p>关于其他的配置这里栏目的配置参照github中作者的配置。</p><p>自己需要的栏目配置好后，打开主题里面的__config.yml文件，进行配置。</p><p><img src="https://raw.githubusercontent.com/xiaobini/image/main/image%5C202308271703854.png" alt="栏目配置"></p><p>关于其他的配置如音乐播放、背景图片、文字等等也都是在这个文档中进行配置，根据作者在这个文档中的注释进行配置。不在赘述。</p><p>配置好主题后重新输入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g # 更新生成</span><br><span class="line">hexo s # 开启服务</span><br></pre></td></tr></table></figure><p>即可在<a href="http://localhost:4000/">http://localhost:4000</a> 查看网页配置的情况。</p><h2 id="博客部署到Github上"><a href="#博客部署到Github上" class="headerlink" title="博客部署到Github上"></a>博客部署到Github上</h2><h3 id="SSH-Key配置"><a href="#SSH-Key配置" class="headerlink" title="SSH Key配置"></a>SSH Key配置</h3><p>在git中输入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;用户名&quot;</span><br><span class="line">git config --global user.email &quot;邮箱地址&quot;</span><br><span class="line">ssh-keygen -t rsa -C &#x27;上面的邮箱&#x27;</span><br></pre></td></tr></table></figure><p>根据提示三次回车后生成ssh key。</p><p>之后再git中使用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><p>查看ssh密钥，复制这个密钥打开github，在Settings中找到 SSH and GPG keys。点击Nnew SSH Key。</p><p><img src="https://raw.githubusercontent.com/xiaobini/image/main/image%5C202308271719546.png" alt="github ssh配置"></p><p><img src="https://raw.githubusercontent.com/xiaobini/image/main/image%5C202308271721704.png" alt="SSH 配置"></p><h3 id="根目录配置"><a href="#根目录配置" class="headerlink" title="根目录配置"></a>根目录配置</h3><p>生成之后，打开博客根目录（D:\Myblog\blog）下的__config.yml，进行博客的配置。</p><p><img src="https://raw.githubusercontent.com/xiaobini/image/main/image%5C202308271641408.png" alt="config配置1"></p><p>拉到最下面找到deploy，配置如下。</p><p><img src="https://raw.githubusercontent.com/xiaobini/image/main/image%5C202308271728990.png" alt="deploy配置"></p><blockquote><p>type: git —-必须是git</p><p>repo：<a href="http://github.com/%E7%94%A8%E6%88%B7%E5%90%8D/%E7%94%A8%E6%88%B7%E5%90%8D.github.io.git">http://github.com/用户名/用户名.github.io.git</a>     # 用户名&#x2F;用户名.github.io  这个为刚刚创建的仓库。&#x3D;&#x3D;必须是这个格式&#x3D;&#x3D;   branch：master   </p></blockquote><p>配置好上面的步骤之后，需要在根目录下下载部署插件，在git中输入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h3 id="上传github"><a href="#上传github" class="headerlink" title="上传github"></a>上传github</h3><p>经过上面的步骤如果到此为止还没有出错的话那么恭喜你。这是最后一部。</p><p>在git中使用如下命令上传到github</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g #更新文件</span><br><span class="line">hexo d # 上传到服务器</span><br></pre></td></tr></table></figure><p>上面的指令没有问题的话可以在github仓库中看到本地的文件</p><p><img src="https://raw.githubusercontent.com/xiaobini/image/main/image%5C202308271735224.png" alt="github文件"></p><h1 id="开始搬砖"><a href="#开始搬砖" class="headerlink" title="开始搬砖"></a>开始搬砖</h1><h2 id="创建新的文章"><a href="#创建新的文章" class="headerlink" title="创建新的文章"></a>创建新的文章</h2><p>在git中输入<em><strong>hexo new “文章名”</strong></em>即可在source文件夹下的_posts文件夹看到生成的文章，这个文章只能支持markdown语法。</p><p>刚开始创建的文章头部为</p><p><img src="https://raw.githubusercontent.com/xiaobini/image/main/image%5C202308271739237.png" alt="文章头部"></p><p>我们可以根据之前的配置在文章头部加上如author，categories、tag标签。需要注意的是，标签与后面内容之间需要使用空格隔开，否则使用<strong>hexo g</strong>会报错。</p><p>文章头部还可以配置哪些功能可以参考作者的说明：</p><p><img src="https://raw.githubusercontent.com/xiaobini/image/main/image%5C202308271742924.png" alt="文章配置说明"></p><p>写完文章后想要更新到github上还是按照上面的步骤：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><h1 id="关于上传时需要登陆的情况"><a href="#关于上传时需要登陆的情况" class="headerlink" title="关于上传时需要登陆的情况"></a>关于上传时需要登陆的情况</h1><p>有的时候在上传的时候会遇到要求登陆的情况，但是没办法使用用户名+密码的形式登录。这里需要使用Github中的token。</p><h2 id="github-token创建"><a href="#github-token创建" class="headerlink" title="github token创建"></a>github token创建</h2><p>在settings中拉到最下面找到Develop Settings，找到token</p><p><img src="https://raw.githubusercontent.com/xiaobini/image/main/image%5C202308271747757.png" alt="token创建"></p><p><img src="https://raw.githubusercontent.com/xiaobini/image/main/image%5C202308271748418.png" alt="token创建2"></p><p><img src="https://raw.githubusercontent.com/xiaobini/image/main/image%5C202308271750761.png" alt="token配置3"></p><p>拉到最下面确认生成token即可，token要记住，这个token只显示一次，后面不在显示。</p><p>在本地网站根目录下找到_config.yml并打开，拉到最下面的deploy中加入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">token: 刚刚复制的token</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/xiaobini/image/main/image%5C202308271753792.png" alt="token配置4"></p>]]></content>
      
      
      <categories>
          
          <category> 杂类技能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
